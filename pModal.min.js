(function () {
    "use strict";
    window.PModal = function o(t) {
        var o = this;
        if (arguments.length == 0) {
            t = {}
        }
        var a = ".modal-overlay,.preloader-indicator-overlay,.popup-overlay{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0, 0, 0, .4);z-index:10600;visibility:hidden;opacity:0;-webkit-transition-duration:400ms;transition-duration:400ms}.modal-overlay.modal-overlay-visible,.preloader-indicator-overlay.modal-overlay-visible,.popup-overlay.modal-overlay-visible{visibility:visible;opacity:1}.popup-overlay{z-index:10200}" + ".modal{width:270px;position:absolute;z-index:11000;left:50%;margin-left:-135px;margin-top:0;top:50%;text-align:center;border-radius:7px;opacity:0;-webkit-transform:translate3d(0, 0, 0) scale(1.185);transform:translate3d(0, 0, 0) scale(1.185);-webkit-transition-property:-webkit-transform, opacity;-moz-transition-property:-moz-transform, opacity;-ms-transition-property:-ms-transform, opacity;-o-transition-property:-o-transform, opacity;transition-property:transform, opacity;color:#000;display:none}.modal.modal-in{opacity:1;-webkit-transition-duration:400ms;transition-duration:400ms;-webkit-transform:translate3d(0, 0, 0) scale(1);transform:translate3d(0, 0, 0) scale(1)}.modal.modal-out{opacity:0;z-index:10999;-webkit-transition-duration:400ms;transition-duration:400ms;-webkit-transform:translate3d(0, 0, 0) scale(0.815);transform:translate3d(0, 0, 0) scale(0.815)}.modal-inner.no-button{padding:15px;border-radius:7px;}.modal-inner{padding:15px;border-radius:7px 7px 0 0;position:relative;background:#e8e8e8}.modal-inner.no-button:after{height:0}.modal-inner:after{content:'';position:absolute;left:0;bottom:0;right:auto;top:auto;height:1px;width:100%;background-color:#b5b5b5;display:block;z-index:15;-webkit-transform-origin:50% 100%;transform-origin:50% 100%}html.pixel-ratio-2 .modal-inner:after{-webkit-transform:scaleY(0.5);transform:scaleY(0.5)}html.pixel-ratio-3 .modal-inner:after{-webkit-transform:scaleY(0.33);transform:scaleY(0.33)}.modal-title{font-weight:500;font-size:18px;text-align:center}.modal-title + .modal-text{margin-top:5px}.modal-buttons{height:44px;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center}.modal-buttons.modal-buttons-vertical{display:block;height:auto}.modal-button{width:100%;padding:0 5px;height:44px;font-size:17px;line-height:44px;text-align:center;color:#007aff;background:#e8e8e8;display:block;position:relative;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;cursor:pointer;box-sizing:border-box;-webkit-box-flex:1;-ms-flex:1}.modal-button:after{content:'';position:absolute;right:0;top:0;left:auto;bottom:auto;width:1px;height:100%;background-color:#b5b5b5;display:block;z-index:15;-webkit-transform-origin:100% 50%;transform-origin:100% 50%}html.pixel-ratio-2 .modal-button:after{-webkit-transform:scaleX(0.5);transform:scaleX(0.5)}html.pixel-ratio-3 .modal-button:after{-webkit-transform:scaleX(0.33);transform:scaleX(0.33)}.modal-button:first-child{border-radius:0 0 0 7px}.modal-button:last-child{border-radius:0 0 7px 0}.modal-button:last-child:after{display:none}.modal-button:first-child:last-child{border-radius:0 0 7px 7px}.modal-button.modal-button-bold{font-weight:500}html:not(.watch-active-state) .modal-button:active,.modal-button.active-state{background:#d4d4d4}.modal-buttons-vertical .modal-button{border-radius:0}.modal-buttons-vertical .modal-button:after{display:none}.modal-buttons-vertical .modal-button:before{display:none}.modal-buttons-vertical .modal-button:after{content:'';position:absolute;left:0;bottom:0;right:auto;top:auto;height:1px;width:100%;background-color:#b5b5b5;display:block;z-index:15;-webkit-transform-origin:50% 100%;transform-origin:50% 100%}html.pixel-ratio-2 .modal-buttons-vertical .modal-button:after{-webkit-transform:scaleY(0.5);transform:scaleY(0.5)}html.pixel-ratio-3 .modal-buttons-vertical .modal-button:after{-webkit-transform:scaleY(0.33);transform:scaleY(0.33)}.modal-buttons-vertical .modal-button:last-child{border-radius:0 0 7px 7px}.modal-buttons-vertical .modal-button:last-child:after{display:none}.modal-no-buttons .modal-inner{border-radius:7px}.modal-no-buttons .modal-inner:after{display:none}.modal-no-buttons .modal-buttons{display:none}", e = '<div class="modal " style="display: block; margin-top: -62px;"><div class="modal-inner"><div class="modal-title">{{title}}</div><div class="modal-text">{{content}}</div></div><div class="modal-buttons "><span class="modal-button modal-button-bold" data-action="{{action}}">{{btnText}}</span></div></div>', n = '<div class="modal" style="display: block; margin-top: -62px;"><div class="modal-inner"><div class="modal-text">{{content}}</div></div><div class="modal-buttons "><span class="modal-button modal-button-bold" data-action="{{actionLeft}}">{{btnTextLeft}}</span><span class="modal-button modal-button-bold" data-action="{{actionRight}}">{{btnTextRight}}</span></div></div>', i = '<div class="modal" style="display: block; margin-top: -62px;"><div class="modal-inner"><div class="modal-text">{{content}}</div></div><div class="modal-buttons "><span class="modal-button modal-button-bold" data-action="{{action}}">{{btnText}}</span></div></div>', l = '<div class="modal " style="display: block; margin-top: -62px;"><div class="modal-inner  no-button"><div class="modal-title">{{title}}</div><div class="modal-text">{{content}}</div></div></div>', s = '<div class="modal " style="display: block; margin-top: -62px;"><div class="modal-inner no-button"><div class="modal-text">{{content}}</div></div></div>';
        o.params = {
            css: t.customCSS || a,
            hasButton: false,
            button: t.button || [],
            modalDelay: t.modalDelay || 1e3,
            modalTemplate: t.modalTemplate || {
                TitleButtonModalTemplate: e,
                TitleModalTemplate: l,
                TwoButtonModalTemplate: n,
                ButtonModalTemplate: i,
                SimpleModalTemplate: s
            }
        };
        this.init()
    };
    var t = PModal.prototype.helper = {
        parseDom: function (t) {
            var o = document.createElement("div");
            o.innerHTML = t;
            return o.childNodes
        }, error: function (t) {
            switch (t) {
                case"show":
                    console.error("参数类型错误,show({string}content,[{string}title],[{object}button],[{number}time])");
                    break
            }
        }
    };
    PModal.prototype.modalEvent = {};
    PModal.prototype.init = function () {
        var t = this;
        var o = t.params;
        t.importCSS(o.css);
        t.changeCSS(o.backgroundColor)
    };
    PModal.prototype.assembleHTML = function (t) {
        var o;
        if (t.title) {
            o = t.button ? this.params.modalTemplate.TitleButtonModalTemplate : this.params.modalTemplate.TitleModalTemplate
        } else {
            o = t.button ? t.button.length == 2 ? this.params.modalTemplate.TwoButtonModalTemplate : this.params.modalTemplate.ButtonModalTemplate : this.params.modalTemplate.SimpleModalTemplate
        }
        t.title && (o = o.replace(/{{title}}/, t.title));
        t.content && (o = o.replace(/{{content}}/, t.content));
        if (t.button) {
            if (t.button.length == 1) {
                o = o.replace(/{{btnText}}/, t.button[0].btnText);
                if (typeof t.button[0].action == "function") {
                    o = o.replace(/{{action}}/, "function")
                } else if (typeof t.button[0].action == "string") {
                    o = o.replace(/{{action}}/, t.button[0].action)
                }
            } else {
                o = o.replace(/{{btnTextLeft}}/, t.button[0].btnText);
                o = o.replace(/{{btnTextRight}}/, t.button[1].btnText);
                if (typeof t.button[0].action == "function") {
                    o = o.replace(/{{actionLeft}}/, "functionLeft")
                } else if (typeof t.button[0].action == "string") {
                    o = o.replace(/{{actionLeft}}/, t.button[0].action)
                }
                if (typeof t.button[1].action == "function") {
                    o = o.replace(/{{actionRight}}/, "functionRight")
                } else if (typeof t.button[1].action == "string") {
                    o = o.replace(/{{actionRight}}/, t.button[1].action)
                }
            }
        }
        this.params.hasButton = t.button ? true : false;
        return o
    };
    PModal.prototype.show = function (o, a, e, n) {
        var i = this, l = arguments, s, r;
        if (l.length == 0) {
            t.error("show")
        } else if (l.length == 1) {
            if (typeof l[0] == "string") {
                r = i.assembleHTML.call(i, {content: l[0]})
            } else {
                t.error("show")
            }
        } else if (l.length == 2) {
            if (typeof l[1] == "string") {
                r = i.assembleHTML.call(i, {content: l[0], title: l[1]})
            } else if (typeof l[1] == "object") {
                r = i.assembleHTML.call(i, {content: l[0], button: l[1]});
                e = l[1]
            } else if (typeof l[1] == "number") {
                r = i.assembleHTML.call(i, {content: l[0]});
                n = l[1]
            } else {
                t.error("show")
            }
        } else if (l.length == 3) {
            if (typeof l[1] == "string") {
                if (typeof l[2] == "object") {
                    r = i.assembleHTML.call(i, {content: l[0], title: l[1], button: l[2]});
                    e = l[2]
                } else if (typeof l[2] == "number") {
                    r = i.assembleHTML.call(i, {content: l[0], title: l[1]});
                    n = l[2]
                } else {
                    t.error("show")
                }
            } else if (typeof l[1] == "object") {
                if (typeof l[2] == "number") {
                    r = i.assembleHTML.call(i, {content: l[0], button: l[1]});
                    e = l[1];
                    n = l[2]
                } else {
                    t.error("show")
                }
            }
        } else {
            r = i.assembleHTML.call(i, {content: l[0], title: l[1], button: l[2]});
            e = l[2];
            n = l[3]
        }
        var d = n || this.params.modalDelay;
        var c = t.parseDom(r)[0];
        c.id = "#pModal" + (new Date).getMilliseconds();
        document.body.appendChild(c);
        if (i.params.hasButton) {
            var m = i.showOverlay();
            i.bindEvent(c, e, m)
        }
        setTimeout(function () {
            c.classList.add("modal-in");
            if (!i.params.hasButton) {
                setTimeout(function () {
                    i.hide(c)
                }, d)
            }
        }, 0)
    };
    PModal.prototype.bindEvent = function (t, o, a) {
        var e = this;
        var n = o;
        e.display = function () {
            e.hide(t, a)
        };
        t.addEventListener("click", function (o) {
            switch (o.target.dataset["action"]) {
                case"string":
                    e.hide(t, a);
                    break;
                case"function":
                    n[0].action.call(e, o);
                    break;
                case"functionLeft":
                    n[0].action.call(e, o);
                    break;
                case"functionRight":
                    n[1].action.call(e, o);
                    break
            }
        })
    };
    PModal.prototype.hide = function (t, o) {
        t.classList.remove("modal-in");
        t.classList.add("modal-out");
        setTimeout(function () {
            document.body.removeChild(t)
        }, 400);
        o && this.hideOverlay(o)
    };
    PModal.prototype.showOverlay = function () {
        var o = t.parseDom('<div class="modal-overlay"></div>')[0];
        document.body.appendChild(o);
        setTimeout(function () {
            o.className = "modal-overlay modal-overlay-visible"
        }, 0);
        return o
    };
    PModal.prototype.hideOverlay = function (t) {
        t.className = "modal-overlay";
        setTimeout(function () {
            document.body.removeChild(t)
        }, 400)
    };
    PModal.prototype.importCSS = function (t) {
        var o = document.createElement("style");
        o.innerHTML = t;
        o.id = "pModelCSS";
        if (!document.querySelector("#pModelCSS")) {
            document.getElementsByTagName("head")[0].appendChild(o)
        }
    };
    PModal.prototype.changeCSS = function () {
    };
    window.pModal = new PModal
})();